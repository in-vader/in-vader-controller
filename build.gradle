buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.sourcemuse.gradle.plugin:gradle-mongo-plugin:1.0.0'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE'
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.sourcemuse.mongo'

task bootRunDev(type: org.springframework.boot.gradle.run.BootRunTask, group: 'Application') {
    doFirst() {
        main = project.mainClassName
        classpath = sourceSets.main.runtimeClasspath
        systemProperty 'spring.profiles.active', 'dev'
    }
    runWithMongoDb = true
}

jar {
    baseName = 'in-vader-controller'
    version =  '1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'io.javaslang:javaslang:2.0.5'

    compileOnly 'org.projectlombok:lombok'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'uk.co.datumedge:hamcrest-json:0.2'
}

sourceSets {
    test {
        java.srcDir 'src/test/java'
    }
    integration {
        java.srcDir 'src/test/integration/java'
        resources.srcDir 'src/test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
    runWithMongoDb = true
}

